//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define ZMK_MOUSE_SCRL_VAL 140

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <180>;
};

&lt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <25>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
            require-prior-idle-ms = <150>;
        };

        Shift_Q {
            bindings = <&kp LS(Q)>;
            key-positions = <0 10>;
            layers = <0>;
        };

        Shift_W {
            bindings = <&kp LS(W)>;
            key-positions = <1 11>;
            layers = <0>;
        };

        Shift_E {
            bindings = <&kp LS(E)>;
            key-positions = <12 2>;
            layers = <0>;
        };

        Shift_R {
            bindings = <&kp LS(R)>;
            key-positions = <13 3>;
            layers = <0>;
        };

        Shift_T {
            bindings = <&kp LS(T)>;
            key-positions = <4 14>;
            layers = <0>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <13 24>;
        };

        Tab {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
            timeout-ms = <20>;
            require-prior-idle-ms = <200>;
        };

        hanyeonglayer {
            bindings = <&kp LANG_HANGEUL>;
            key-positions = <11 12 13>;
        };

        temp_right_hand {
            bindings = <&mo 5>;
            key-positions = <24 23 22>;
        };

        TOG_NAV {
            bindings = <&tog 1>;
            key-positions = <10 35>;
        };

        alt_tab {
            bindings = <&swapper>;
            key-positions = <0 1 2 3>;
            timeout-ms = <200>;
        };
    };

    macros {
        Left_right_bracket: Left_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT>;

            label = "LEFT_BRACKET";
        };

        left_right_bracket_2: left_right_bracket_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "LEFT_RIGHT_BRACKET_2";
        };

        left_right_bracket_3: left_right_bracket_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "LEFT_RIGHT_BRACKET_3";
        };
    };

    behaviors {
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            ignored-key-positions = <2 10 11 12 13>;

            // ignored-layers = <1>;
        };

        semicolon: semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "SEMICOLON";
            bindings = <&kp COMMA>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        colon: colon {
            compatible = "zmk,behavior-mod-morph";
            label = "COLON";
            bindings = <&kp PERIOD>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <120>;
        };

        brackets: brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKETS";
            #binding-cells = <0>;
            bindings =
                <&small_bracket 0 LEFT_PARENTHESIS>,
                <&mid_bracket 0 LEFT_BRACE>,
                <&large_bracket 0 LEFT_BRACKET>;
        };

        rightbracket: rightbracket {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHTBRACKET";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RIGHT_BRACE>,
                <&kp RIGHT_BRACKET>;
        };

        small_bracket: small_bracket {
            compatible = "zmk,behavior-hold-tap";
            label = "SMALL_BRACKET";
            bindings = <&Left_right_bracket>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        mid_bracket: mid_bracket {
            compatible = "zmk,behavior-hold-tap";
            label = "MID_BRACKET";
            bindings = <&left_right_bracket_2>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        large_bracket: large_bracket {
            compatible = "zmk,behavior-hold-tap";
            label = "LARGE_BRACKET";
            bindings = <&left_right_bracket_3>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        mouse_scroll: rotate_mouse_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            label = "scroll_left_right";
            tap-ms = <50>;
        };

        layer1: layer1 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER1";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
        };

        swapperbehav: swapperbehav {
            compatible = "zmk,behavior-hold-tap";
            label = "SWAPPERBEHAV";
            bindings = <&mo>, <&swapper>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓                           ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃                           ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                           ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃    A_L1   ┃   S_ALT   ┃  D_SHIFT  ┃  F_CTRL   ┃     G     ┃                           ┃     H     ┃   J_CTRL  ┃   K_SHFT  ┃   L_ALT   ┃   ;_GUI   ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃hangeul_GUI┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃  ESC_L4   ┃   ┃    B_L4   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃    '_L1   ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛   ┗━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃  swapper  ┃  BSPC_L2  ┃   DEL_L3  ┃                           ┃ ENTER_L3  ┃   SPC_L2  ┃  swapper  ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛                           ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
&kp Q                    &kp W       &kp E        &kp R            &kp T         &kp Y        &kp U        &kp I        &kp O       &kp P
&layer1 1 A              &hm LALT S  &hm LSHFT D  &hm LCTRL F      &kp G         &kp H        &hm LCTRL J  &hm RSHFT K  &hm LALT L  &hm RGUI SEMI
&hm LEFT_WIN LANGUAGE_1  &kp Z       &kp X        &kp C            &kp V         &kp B        &lt 4 ESC    &lt 4 B      &kp N       &kp M          &kp COMMA  &kp PERIOD  &kp SLASH  &lt 1 SQT
                                     &swapper     &lt 2 BACKSPACE  &lt 3 DELETE  &lt 3 ENTER  &lt 2 SPACE  &swapper
            >;

            sensor-bindings =
                <&inc_dec_kp RIGHT LEFT>,
                <&inc_dec_kp UP_ARROW DOWN>;
        };

        nav_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NAVI";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓                           ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃           ┃           ┃     UP    ┃           ┃     {     ┃                           ┃     }     ┃     7     ┃     8     ┃     9     ┃     +     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                           ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃   SHIFT   ┃   LEFT    ┃    DOWN   ┃   RIGHT   ┃     [     ┃                           ┃     ]     ┃     4     ┃     5     ┃     6     ┃     -     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃   P UP    ┃  C LOCK   ┃  P DOWN   ┃     (     ┃     N     ┃   ┃     B     ┃     )     ┃     1     ┃     2     ┃     3     ┃     *     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛   ┗━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    TAB    ┃    SPC    ┃                           ┃    DEL    ┃     0     ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛                           ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
&kp ESC  &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp HOME      &msc SCRL_UP         &kp LC(LEFT_ARROW)  &mmv MOVE_UP    &kp LC(RIGHT)    &none
&none    &kp LEFT      &kp DOWN  &kp RIGHT      &kp LA(LEFT)  &kp LA(RIGHT_ARROW)  &mmv MOVE_LEFT      &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none
&trans   &trans        &trans    &kp PAGE_DOWN  &kp PG_UP     &kp END              &kp LS(LG(S))       &none           &msc SCRL_DOWN   &none  &trans  &none  &trans  &trans
                       &trans    &trans         &trans        &mkp RCLK            &mkp LCLK           &trans
            >;

            sensor-bindings =
                <&mouse_scroll MOVE_X(50) MOVE_X(-50)>,
                <&mouse_scroll MOVE_Y(50) MOVE_Y(-50)>;
        };

        num_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "NUM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓                           ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃ SOLO      ┃ TOGGLE IN ┃ RESET ROT ┃ TOGGLE OUT┃ TAKE SNAP ┃                           ┃           ┃           ┃           ┃           ┃           ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                           ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ ---       ┃ LAST KEY  ┃ NEW KEY   ┃ NEXT KEY  ┃ ENTER     ┃                           ┃           ┃           ┃           ┃           ┃           ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃ FULLSCR   ┃ CPY2BRUSH ┃ DEL HEAD  ┃ PSTinPLACE┃ BOOK MARK ┃           ┃   ┃           ┃           ┃           ┃           ┃           ┃           ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛   ┗━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃ REDO/SAV1 ┃TRANS/WARP ┃                           ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛                           ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
&kp STAR        &kp N7    &kp N8        &kp N9        &brackets     &rightbracket  &kp N7     &kp N8         &kp N9      &kp STAR
&kp MINUS       &kp N4    &kp N5        &kp N6        &kp N0        &kp N0         &kp N4     &kp N5         &kp N6      &kp MINUS
&kp UNDERSCORE  &kp PLUS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD     &brackets  &rightbracket  &kp PERIOD  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS  &kp PERIOD
                          &kp PERIOD    &trans        &trans        &trans         &trans     &kp PERIOD
            >;

            sensor-bindings =
                <&inc_dec_kp LC(TAB) LC(LS(TAB))>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "SYM";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓                           ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃                           ┃     ˆ     ┃     &     ┃     Ü     ┃     '     ┃     "     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                           ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     Ä     ┃           ┃    SZ     ┃           ┃           ┃                           ┃   MUTE    ┃   YEN     ┃   EURO    ┃  POUND    ┃     Ö     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃  EMAIL1   ┃  EMAIL2   ┃           ┃           ┃           ┃     N     ┃   ┃     B     ┃   VOL-    ┃   VOL+    ┃   LAST    ┃   NEXT    ┃     \     ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛   ┗━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃    GIF    ┃    ADJ    ┃                           ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛                           ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
&kp N1        &kp N2      &kp N3         &kp N4        &kp N5         &kp N6         &kp N7        &kp N8           &kp N9        &kp N0
&kp LS(EXCL)  &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)     &kp LS(LPAR)  &kp LS(RPAR)
&kp TILDE     &none       &none          &none         &none          &none          &kp C_VOL_DN  &kp C_VOLUME_UP  &none         &none         &kp NON_US_BACKSLASH  &kp PIPE  &kp EQUAL  &kp UNDERSCORE
                          &none          &trans        &trans         &trans         &trans        &none
            >;

            sensor-bindings = <&inc_dec_kp HOME END>, <&inc_dec_kp PG_UP PG_DN>;
        };

        fn_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "FN";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓                           ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃   RESET   ┃ BT CLEAR  ┃  OUT TOG  ┃           ┃           ┃                           ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                           ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃ BOOTLOAD  ┃ BT NEXT   ┃           ┃           ┃           ┃                           ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓   ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃           ┃           ┃ BT PREV   ┃           ┃           ┃           ┃           ┃   ┃           ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃           ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┛   ┗━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃           ┃           ┃           ┃                           ┃           ┃           ┃           ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛                           ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
&kp F12       &kp F7   &kp F8  &kp F9  &bt BT_CLR  &bt BT_CLR  &kp F7  &kp F8  &kp F9      &kp F12
&kp F11       &kp F4   &kp F5  &kp F6  &bt BT_NXT  &bt BT_NXT  &kp F4  &kp F5  &kp F6      &kp F11
&out OUT_TOG  &kp F10  &kp F1  &kp F2  &kp F3      &bt BT_PRV  &trans  &trans  &bt BT_PRV  &kp F1   &kp F2  &kp F3  &kp F10  &sys_reset
                       &trans  &trans  &trans      &trans      &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        righthand {
            bindings = <
&trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &kp SPACE  &kp RET  &trans  &trans  &trans
            >;

            label = "RGHT";
        };
    };

    //Encoder default
    // &left_encoder {
    // status = "okay";
    // zmk,bindings = <&msc SCRL_RIGHT &msc SCRL_LEFT>; // scroll horizontal
    // };
    // &right_encoder {
    // status = "okay";
    // zmk,bindings = <&msc SCRL_UP &msc SCRL_DOWN>; // scroll vertical
    // };
};
